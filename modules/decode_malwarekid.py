import re
import base64

def decode_malwarekid(data):
    if not data:
        return "# No input data."
    encoded_parts = re.findall(r'"(.*?)"', data)
    if not encoded_parts:
        return "# Pyfuscator detected, but decoding failed.\n# Reason : Encoded parts not found."
    try:
        key = re.findall(r'ord\(c\) \^ (\d+)', data)[0]
        key = int(key)
        key = key & 0xff
    except Exception as e:
        err = "# Pyfuscator detected, but decoding failed.\n# Reason : " + str(e)
        err += "\n# check if the key is present in the code (in: ord(c) ^ key) and is an integer."
        return err
    try:
        encoded_str = "".join(encoded_parts)[:-6]
        encoded_str = encoded_str.replace("\\x", "")
        encoded_str = bytes.fromhex(encoded_str).decode()
        decoded_str = base64.b64decode(encoded_str).decode()
    except Exception as e:
        return "# Pyfuscator detected, but decoding failed.\n# Reason : " + str(e)
    original_code = "".join(chr(ord(c) ^ key) for c in decoded_str)
    final = "# Decoded from Pyfuscator\n\n" + original_code
    return final
